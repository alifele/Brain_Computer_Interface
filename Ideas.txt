===========================================
HILBERT CURVE

as you can find in this cool video on YouTube, Hilbert's Curve: Is
infinite math useful?, you can map the frequency space to a 2 dimentional picture of vise versa.

So one of my ideas to classify the tasks is to find the frequency components of the signals and then map them to a 
2D picture and them classify them using CNN methods.

You can find the Hilbert_curve notebook in this repository.

Note:
In my opinion, the Hilbert curve is very cool. Since if you look at it and trace some points on it you will find out 
that this cutve is curving the time series and puts them beside each other. so the CNN may find some interesting dependency 
in the data of time series which belong to different times.
On the other hand starting the hilbert curve from another point (some thing like sliding the curve while concidering the jump between end point as the start point of the curve) will chage the neighbours of each point. so sliding the curve
can be used to generate new data


===========================================
Encoding the time series as Images

as you can find in this article, https://medium.com/analytics-vidhya/encoding-time-series-as-images-b043becbdbf3, 
I want to turn the timeseries data into images and classify them using CNN methods



===========================================
Making the Markove Transition Matrix 

I think a very useful way to gather the transition is to make a 3D matrix in which the first layer
represents the markov transition matrix of the first block in the scalp map


===========================================
Using the different channels in order to make images

As you know, the data which is provided by the orgnizers are given in 63 channels in which each channel is a time
series it self. at each snapshot you can gather gather together the data on different channels to make pictures
and then use the sequence of the images as different images to classify the EEG signals


===========================================
Transfer Learning
 
I have frequently seen on the papers on the BCI classification that Transfer learning has a very good effect in the
classification. So try to find the ANN architectures and use its first layers as transfer learning.

p300speller classification may be some how similar 

** Note that the transfer learning works well Convolutional Neural Networks
===========================================
Another Idea for the Transfer learning

It may be quite diffcult to find a trained model. One raw idea that I can propose is that make some new data (I don't know
you can make some new by taking the every two signal and add the mean of them as the new data set.
Then train the new model in which is a very heavy model with heavy training dataset.

And then you can use the a few first layers of the trained model to build your final model.

===========================================
Time Convolutional Neural Network

As you can find in this article : https://towardsdatascience.com/how-to-use-convolutional-neural-networks-for-time-series-classification-56b1b0a07a57

CNN also can be used for time serires classification


===========================================
Echo State Neural Network

As you can find in the following article : https://towardsdatascience.com/predicting-stock-prices-with-echo-state-networks-f910809d23d4

I think it is good to have a ESN classifier in the voters ensmble

===========================================
Time Frequency images

The time Frequency images may be use as the input of a CNN classifier.

============================================
Multifractal cumulants and predictive complexcity

As described in this artice : https://arxiv.org/pdf/1003.2879.pdf, Multifractal cumulants and predictive complexcity
along with the power bands can increase the accuracy of classification



============================================
The time frequency images 

If I were to give you a plot which can describe the signal in a glance, I would certianly choose the 
Time Frequency images. Because, although they have a trade off between frequency, but the have quite 
adequate information about the signal. So DO NOT miss CNN methods with them.

There are a lot of python packages which you can use to fasciliate your job. one of them is: 
https://docs.scipy.org/doc/scipy/reference/signal.html


============================================
Video processing method

The sequences of the scalp map are actually images with temporal dependency. So we can regard them 
as videos and we can usethe video calssificatoin methods.
Check out this article for more details : https://towardsdatascience.com/introduction-to-video-classification-6c6acbc57356




