# -*- coding: utf-8 -*-
"""Tools Review.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L88DrRzn0IbLObmUl5Og6F5Cty_n-TRi

# A Review of tools and functions

*Note* :Please first mount the Google Drive
"""

import sys
import numpy as np
import matplotlib.pyplot as plt
sys.path.append('/content/drive/My Drive/EEG_BCI/')
import datafetch
import plotters

"""##fetching data"""

subj_1 = datafetch.fetch_subject(1)

subj_1.keys()

"""##scalp map"""

from plotters import scalp_plotter

mat = scalp_plotter(subj_1['test_data'][43], 1025)
# You should pass the whole channels with all data
# the secend input of the function shows the time in which you 
# want to see the scalp map
plt.imshow(mat)

"""## Hilbert Space"""

from plotters import Hilbert_generator, Hilbert_concat, data_to_HilbertMat

plt.figure(figsize=(5,5))
x,y = Hilbert_generator(n=5)
plt.plot(x,y)
plt.axis('equal')

mat = data_to_HilbertMat(x,y,test=True)
plt.imshow(mat)

x,y =Hilbert_concat(x,y)

data = subj_1['test_data'][23][:,14]

mat = data_to_HilbertMat(x,y,data =data, double_factor=2)

plt.figure(figsize=(13,13))
plt.imshow(mat)

mat = data_to_HilbertMat(x,y,data =np.roll(data,400), double_factor=2)
plt.figure(figsize=(13,13))
plt.imshow(mat)

"""## Garmian Angular Field"""

from plotters import Garmian_calculator
from plotters import Scaler

mat = Garmian_calculator(subj_1['test_data'][34][:,6])

plt.imshow(mat)

data = subj_1['test_data'][34][:,25]
data = Scaler(data)
phi = np.arccos(data)
t = np.linspace(0,3,len(data))
plt.figure(figsize=(6,6))
plt.polar(phi,t*3)

"""## Markov Transition Field"""

from plotters import Markov_matrix_generator, bin_creator

data = subj_1['test_data'][34][:,58]

bins = bin_creator(data, 120)

mat = Markov_matrix_generator(bins, data, normal=True)
plt.imshow(mat)

fig  = plt.figure(figsize=(16,8))
for i in range(63):
  ax = fig.add_subplot(7,9,i+1)
  ax.imshow(Markov_matrix_generator(bins, subj_1['test_data'][34][:,i], normal=False))
  ax.axis('off')

plt.plot(data)

"""The result is very Weird! Isn't it?"""





